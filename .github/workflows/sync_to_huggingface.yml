name: Sync to HuggingFace Spaces

on:
  push:
    branches: [main, master]
  workflow_dispatch: # Allow manual triggering

env:
  HF_SPACE_NAME: "textlens-ocr" # Change this to your Space name if different

jobs:
  sync-to-huggingface:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Validate project structure
        run: |
          echo "üîç Validating project structure..."

          # Check if main files exist
          if [ ! -f "app.py" ]; then
            echo "‚ùå app.py not found!"
            exit 1
          fi

          if [ ! -f "requirements.txt" ]; then
            echo "‚ùå requirements.txt not found!"
            exit 1
          fi

          if [ ! -f "README.md" ]; then
            echo "‚ùå README.md not found!"
            exit 1
          fi

          # Check if old structure was removed
          if [ -d "models" ] || [ -d "ui" ] || [ -d "utils" ]; then
            echo "‚ùå Old modular structure still exists! Clean up required."
            exit 1
          fi

          echo "‚úÖ Project structure validated!"
          echo "üìä Single-file architecture confirmed"

      - name: Install dependencies and validate
        run: |
          echo "üì¶ Installing dependencies..."
          pip install -r requirements.txt

          echo "üîç Validating Python syntax..."
          python -m py_compile app.py

          echo "üìã Checking imports..."
          python -c "
          try:
              import gradio as gr
              import torch
              import transformers
              import spaces
              print('‚úÖ All required packages available')
          except ImportError as e:
              print(f'‚ùå Import error: {e}')
              exit(1)
          "

      - name: Install HuggingFace Hub
        run: |
          pip install huggingface_hub

      - name: Setup Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Get HuggingFace username
        id: hf_user
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          # Get username from HuggingFace API
          python -c "
          from huggingface_hub import HfApi
          import os
          api = HfApi(token=os.environ['HF_TOKEN'])
          user = api.whoami()
          print(f\"HF_USERNAME={user['name']}\")
          " >> $GITHUB_OUTPUT

      - name: Push to HuggingFace Spaces
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_USERNAME: ${{ steps.hf_user.outputs.HF_USERNAME }}
        run: |
          # Create the HuggingFace Space URL
          HF_SPACE_URL="https://huggingface.co/spaces/${HF_USERNAME}/${HF_SPACE_NAME}"

          echo "üöÄ Syncing to: $HF_SPACE_URL"
          echo "üìÅ Architecture: Single-file streamlined approach"
          echo "ü§ñ Models: Nanonets-OCR-s, Qwen2-VL-OCR-2B, RolmOCR"

          # Push to HuggingFace Spaces
          git push --force https://user:$HF_TOKEN@huggingface.co/spaces/${HF_USERNAME}/${HF_SPACE_NAME} HEAD:main

          echo "‚úÖ Successfully synced to HuggingFace Spaces!"
          echo "üöÄ Your Space will be available at: $HF_SPACE_URL"
          echo "‚ö° New streamlined architecture deployed!"
